# arxiv:1710.11188, CMS SUSY stop (resolved and boosted)

info analysis
# Details about experiment
  experiment CMS
  id SUS-16-050
  publication Phys.Rev. D97 (2018) no.1, 012007 
  sqrtS 13.0
  lumi 35.9
  arXiv 1710.11188
  hepdata https://www.hepdata.net/record/ins1633588
  doi 10.1103/PhysRevD.97.012007


### OBJECT SELECTIONS

# AK4 jets
object AK4jets
  take Jet
  select pt > 30
  select |eta| < 2.4

# AK8 jets
object AK8jets
  take FatJet
  select pt > 200
  select |eta| < 2.4

# b-tagged jets - loose
object bjets_loose
  take AK4jets
  select btagDeepB > 0.152

# b-tagged jets - medium
object bjets_medium
  take AK4jets
  select btagDeepB > 0.4941

# b-tagged jets - tight
object bjets_tight
  take AK4jets
  select btagDeepB > 0.8001

# W jets - mass-tagged
object Wjets_masstag
  take AK8jets
  select msoftdrop [] 65 105

# W jets - W-tagged
object Wjets
  take Wjets_masstag
  select tau2 / tau1 <= 0.4

# W jets - anti-tagged
object Wjets_antitag
  take Wjets_masstag
  select tau2 / tau1 > 0.4

# top jets - mass-tagged
object topjets_masstag
  take AK8jets
  select pt > 400
  select msoftdrop [] 105 210

# top jets - mass-tagged, subjet b-antitagged
object topjets_masstag_0b
  take topjets_masstag
  select btagDeepB < 0.1522 

# top jets - top-tagged, subjet b-tagged
object topjets
  take topjets_masstag
  select btagDeepB >= 0.1522 
  select tau3 / tau2 < 0.46

# top jets - anti-tagged
object topjets_antitag
  take topjets_masstag
  select btagDeepB < 0.1522
  select tau3 / tau2 >= 0.46

# muons - veto
object muons_veto
  take Muon
  select pt > 5
  select |eta| < 2.4
  select softId == 1
  select miniPFRelIso_all < 0.2
  select |dxy| < 0.2
  select |dz| < 0.5

# muons - select
object muons_sel
  take Muon
  select pt > 10
  select |eta| < 2.4
  select miniPFRelIso_all < 0.15
  select |dxy| < 0.05
  select |dz| < 0.1

# electrons - veto
object electrons_veto
  take Electron
  select pt > 5
  select |eta| < 2.5
  select miniPFRelIso_all < 0.1
  select |dxy| < 0.05
  select |dz| < 0.1

# electrons - select
object electrons_sel
  take Electron
  select pt > 10
  select |eta| < 2.5 
  select |eta| ][ 1.442 1.556
  select miniPFRelIso_all < 0.1
  select |dxy| < 0.05
  select |dz| < 0.1

# leptons - veto
object leptons_veto
  take electrons_veto
  take muons_veto

# leptons - select
object leptons_sel
  take electrons_sel
  take muons_sel

# taus - veto
object taus_veto
  take Tau
  select pt > 18    # from 2016 AN Table 12
  select |eta| < 2.5   # from 2016 AN Table 12
  select idMVAnewDM2017v2 >= 4

# photons - select
object photons
  take Photon
  select pt > 80
  select |eta| < 2.5

# jets - no photon
object jets_0pho
  take AK4jets j
  # doesn't quite work syntactically!!! 
  # We need to be looking at the same photon and same jet
  # for the time being, we compute the full line
  reject dR(j, photons) < 0.4 and photons.pt/j.pt [] 0.5 2.0
  # How about using “any” and “all” as intrinsic functions? e.g.:
  # reject dR(j, any(photons)) < 0.4 and any(photons).pt/j.pt [] 0.5 2.0
  # reject any(dR(j, photons)) < 0.4 and any(photons.pt/j.pt) [] 0.5 2.0
  # We can perhaps even address the question of whether to compute the full line or
  # each side of the logical statements individually with this.

# MET
object met
  take MET

# Megajets are 4-vectors, each consisting of multiple jet.  Each event with njets > 0 
# is partitioned into 2 megajets.  Should we treat their calculation as an object
# G&S think object is better.  
# SS suggests:
object megajets
  take fmegajets(AK4jets)


### EVENT VARIABLES
# !!! Note that currently we have not used the function blocks, and this way 
# we do not know where to get the functions from.  
# We can survive with this now, but we will have to make a decision eventually.
# All functions used here are taken from Razorfunc.h

define MR = fMR(megajets)
define R2 = sqrt(fMTR(megajets, met) / MR)
define dphimegajets = dPhi(megajets[0], megajets[1])
# Only necessary for trigger weighting, can disregard for now
#define HT = fHT(AK4jets)

# Question: Should the following be defined here or below during selection
# when after we guarantee the existance of a lepton / photon?
# NGU, SS, HBP all agree that definitions are just definitions / aliases.  
# So we can use whatever index we want without worrying about breaking anything.  
# Quantities are only computed when they are in blocks.  
# This also brings us back to the block structure.

define METl = met + leptons_veto[0]
define METll = met + leptons_veto[0] + leptons_veto[1]
define METpho = met + photons[0]

define R2l = sqrt(fMTR(megajets, METl) / MR)
define R2ll = sqrt(fMTR(megajets, METll) / MR)
#define MR0pho = fMR(megajets_0pho)
#define R2pho = sqrt(fMTR(megajets_0pho, METpho) / MR0pho)
define Mll = fMll(leptons_sel[0], leptons_sel[1])
define MT = fMT(leptons_veto[0], met)

# EVENT SELECTION
# Boosted categories

# Boost pre-selection cuts
region preselection
  #weight HTMETtrig(HT, met)
  select AK4jets.size >= 3
  select AK8jets.size >= 1
  select MR > 800
  select R2 > 0.08

# W category signal and control regions
region W_S
  select preselection
  select leptons_veto.size == 0
  select taus_veto.size == 0
  select bjets_medium.size >= 1
  select Wjets.size >= 1
  select dphimegajets < 2.8

region W_Q
  select preselection
  select leptons_veto.size == 0
  select taus_veto.size == 0
  select bjets_loose.size == 0
  select Wjets_antitag.size >= 1
  select dphimegajets >= 2.8

region W_T
  select preselection
  select leptons_veto.size == 1
  # Note to razors: we don't currently have the following cut in the analysis, 
  # but we probably should have it in all the 1 lepton CRs
  #select taus_veto.size == 0
  select bjets_loose.size >= 1
  select Wjets.size >= 1
  select MT < 100
  # or select fMT(leptons_veto[0], met) < 100
  select dphimegajets < 2.8

region W_W
  select preselection
  select leptons_veto.size == 1
  select bjets_loose.size > 0
  select Wjets_masstag.size >= 1
  select MT [] 30 100
  #or select fMT(leptons_veto[0], met) [] 30 100
  select dphimegajets < 2.8

region W_L
  #weight HTMETtrig(HT, met)
  select AK4jets.size >= 3
  select AK8jets.size >= 1
  select MR > 800
  select leptons_veto.size == 1
  select R2l > 0.08
  # or select sqrt(fMTR(megajets, METl) / MR) > 0.08
  select bjets_loose.size == 0
  select Wjets_masstag.size >= 1
  select dphimegajets < 2.8
  select MT [] 30 100
  # or select fMT(leptons[0], MET) [] 30 100
  # or 30 < MT < 100
  # or 30 < fMT(leptons[0], MET) < 100

region W_Z
  #weight HTMETtrig(HT, met)
  select AK4jets.size >= 3
  select AK8jets.size >= 1
  select MR > 800
  select (muons_sel.size == 2 and electrons_veto.size == 0) or 
         (electrons_sel.size == 2 and muons_veto.size == 0)
  # leptons_sel is defined as an object above
  # an alternative could be
  #define leptons_sel = electrons_sel + muons_sel
  # but this might be stretching too far?
  select leptons_sel[0].charge + leptons_sel[1].charge == 0
  select R2ll > 0.08
  # or select sqrt(fMTR(megajets, METll) / MR) > 0.08
  select Wjets_masstag.size >= 1
  select dphimegajets < 2.8
  select fMll(leptons_sel[0], leptons_sel[1]) < 10
  # if we had a standard object, we could alternatively have something like:
  # select (leptons_sel[0] + leptons_sel[1]).mass < 10

region W_G
  #weight HTMETtrig(HT, met)
  select AK4jets.size >= 3
  select AK8jets.size >= 1
  select leptons_veto.size == 0
  select taus_veto.size == 0
  select photons.size == 1
  #select MR0pho > 800
  # or select fMR(megajets_0pho) > 800
  #select select R20pho > 0.08
  # or select sqrt(fMTR(megajets_0pho, METpho) / fMR(megajets_0pho)) > 0.08
  select Wjets_masstag.size >= 1
  select dphimegajets < 2.8

# Top category signal and control regions
region Top_S
  select preselection
  select leptons_veto.size == 0
  select taus_veto.size == 0                  
  select topjets.size >= 1
  select dphimegajets < 2.8

region Top_Q
  select preselection
  select leptons_veto.size == 0
  select taus_veto.size == 0                  
  select bjets_loose.size == 0
  select topjets_antitag.size >= 1
  select dphimegajets >= 2.8

region Top_T
  select preselection
  select leptons_veto.size == 1
  select taus_veto.size == 0                  
  select topjets.size >= 1
  select dphimegajets < 2.8
  select MT < 100
  # or select fMT(leptons_veto[0], met) < 100

region Top_W
  select preselection
  select leptons_veto.size == 1
  select taus_veto.size == 0                  
  select bjets_loose.size == 0
  select topjets_masstag_0b.size >= 1
  select dphimegajets < 2.8
  select MT [] 30 100
  # or select fMT(leptons_veto[0], met) [] 30 100 

region Top_L
  #weight HTMETtrig(HT, met)
  select AK4jets.size >= 3
  select AK8jets.size >= 1
  select MR > 800
  select leptons_veto.size == 1
  select R2l > 0.08
  # or select sqrt(fMTR(megajets, METl) / MR) > 0.08
  select bjets_loose.size == 0
  select topjets_masstag_0b.size >= 1
  select dphimegajets < 2.8
  select MT [] 30 100
  # or select MT(leptons[0], met) [] 30 100

region Top_Z
  #weight HTMETtrig(HT, met)
  select AK4jets.size >= 3
  select AK8jets.size >= 1
  select MR > 800
  select (muons_sel.size == 2 and electrons_veto.size == 0) or 
         (electrons_sel.size == 2 and muons_veto.size == 0)
  select leptons_sel[0].charge + leptons_sel[1].charge == 0
  select R2ll > 0.08
  # or select sqrt(fMTR(megajets, METll) / MR) > 0.08
  select topjets_masstag.size >= 1
  select dphimegajets < 2.8
  select fMll(leptons_sel[0], leptons_sel[1]) < 10

region Top_G
  #weight HTMETtrig(HT, met)
  select AK4jets.size >= 3
  select AK8jets.size >= 1
  select leptons_veto.size == 0
  select taus_veto.size == 0
  select photons.size == 1
  # select MR0pho > 800
  # or select fMR(megajets_0pho) > 800
  #select R20pho > 0.08
  # or select sqrt(fMTR(megajets_0pho, METpho) / fMR(megajets_0pho)) > 0.08
  select topjets_masstag.size >= 1
  select dphimegajets < 2.8




